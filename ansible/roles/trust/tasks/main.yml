- name: "Add dns server zone" 
  community.windows.win_dns_zone:
    name: "{{remote_forest}}"
    type: forwarder
    replication: forest
    dns_servers:
      - "{{hostvars[cdf].ansible_host}}"
  when: remote_forest != domain

# source : https://social.technet.microsoft.com/wiki/contents/articles/11911.active-directory-powershell-how-to-create-forest-trust.aspx
# Sysprep DC03 to avoid duplicate domain SID: {https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc794894(v=ws.10)?redirectedfrom=MSDN}
- name: Add trusts between forests
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $RemoteForest,

          [String]
          $RemoteAdmin,

          [String]
          $RemoteAdminPassword
      )

      Write-Host "Starting trust check..."
      Write-Host "Remote forest: $RemoteForest"
      Write-Host "Remote admin: $RemoteAdmin"

      try {
          $localForest = [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()
          Write-Host "Local forest: $($localForest.Name)"

          try {
              Write-Host "Checking for existing trust relationship with $RemoteForest..."
              $trust = $localForest.GetTrustRelationship($RemoteForest)
              Write-Host "Trust already exists with $RemoteForest."
              $Ansible.Changed = $false
          } catch [System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException] {
              Write-Host "No trust relationship found. Creating trust with $RemoteForest..."
              $remoteContext = New-Object -TypeName "System.DirectoryServices.ActiveDirectory.DirectoryContext" `
                  -ArgumentList @("Forest", $RemoteForest, $RemoteAdmin, $RemoteAdminPassword)

              $distantForest = [System.DirectoryServices.ActiveDirectory.Forest]::GetForest($remoteContext)

              Write-Host "Successfully connected to remote forest: $($distantForest.Name)"
              $localForest.CreateTrustRelationship($distantForest, "Bidirectional")
              Write-Host "Trust created successfully between $($localForest.Name) and $($distantForest.Name)."
              $Ansible.Changed = $true
          }
      } catch {
          Write-Host "ERROR: $_"
          Write-Host "Exception Message: $($_.Exception.Message)"

          if ($_.Exception.InnerException) {
              Write-Host "Inner Exception: $($_.Exception.InnerException.Message)"
          } else {
              Write-Host "Inner Exception: None"
          }

          Write-Host "Stack Trace: $($_.ScriptStackTrace)"
          throw $_
      }
    error_action: stop
    parameters:
      RemoteForest: "{{ remote_forest }}"
      RemoteAdmin: "{{ remote_admin }}"
      RemoteAdminPassword: "{{ remote_admin_password }}"
  vars:
    ansible_become: yes
    ansible_become_method: runas
    ansible_become_user: "{{ domain_username }}"
    ansible_become_password: "{{ domain_password }}"
  register: trust_result

- name: "Reboot and wait for the AD system to restart"
  win_reboot:
    test_command: "Get-ADUser -Identity Administrator -Properties *"
  when: trust_result.changed

- name: Show trust result
  win_shell: |
    $obj = Get-CimInstance -Class Microsoft_DomainTrustStatus -Namespace root\microsoftactivedirectory
    Write-Output -InputObject $obj
  vars:
    ansible_become: yes
    ansible_become_method: runas
    domain_name: "{{domain}}"
    ansible_become_user: "{{domain_username}}"
    ansible_become_password: "{{domain_password}}"
